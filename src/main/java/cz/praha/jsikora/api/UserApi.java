/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cz.praha.jsikora.api;

import cz.praha.jsikora.model.User;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-09-04T16:23:58.912+02:00")

@Api(value = "user", description = "the user API")
public interface UserApi {

    @ApiOperation(value = "add new user", nickname = "addUser", notes = "You could add new user to the system ", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "user created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing user already exists") })
    @RequestMapping(value = "/user",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addUser(@ApiParam(value = "User item to add"  )  @Valid @RequestBody User user);


    @ApiOperation(value = "Delete a user by ID.", nickname = "deleteUser", notes = "Delete a user by ID.  ", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation"),
        @ApiResponse(code = 400, message = "User was not found"),
        @ApiResponse(code = 500, message = "Error during operation") })
    @RequestMapping(value = "/user/{userId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteUser(@ApiParam(value = "Parameter description in CommonMark or HTML.",required=true) @PathVariable("userId") Integer userId);


    @ApiOperation(value = "Returns a user by ID.", nickname = "getUserInfo", notes = "Gets a user by ID.  ", response = User.class, tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = User.class) })
    @RequestMapping(value = "/user/{userId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<User> getUserInfo(@ApiParam(value = "Parameter description in CommonMark or HTML.",required=true) @PathVariable("userId") Integer userId);

}
